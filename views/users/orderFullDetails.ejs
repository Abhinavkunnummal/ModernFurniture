<%- include('../layouts/header.ejs') %>
<%- include('../layouts/navbar.ejs') %>

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/user_profile/img/favicon/favicon.ico" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />

    <!-- Icons. Uncomment required icon fonts -->
    <link rel="stylesheet" href="/user_profile/vendor/fonts/boxicons.css" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="/user_profile/vendor/css/core.css" class="template-customizer-core-css" />
    <link rel="stylesheet" href="/user_profile/vendor/css/theme-default.css" class="template-customizer-theme-css" />
    <link rel="stylesheet" href="/user_profile/css/demo.css" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="/user_profile/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />

    <!-- Page CSS -->

    <!-- Helpers -->
    <script src="/user_profile/vendor/js/helpers.js"></script>

    <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
    <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
    <script src="/user_profile/js/config.js"></script>
  </head>

  <body>
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar">
      <div class="layout-container">
        <!-- Menu -->
        <%- include('../layouts/sidenav.ejs') %>
       
        <!-- / Menu -->

        <!-- Layout container -->
        <div class="layout-page">
          <!-- Navbar -->

          <div class="content-wrapper">
            <div class="container-xxl flex-grow-1 container-p-y">
                
                <div class="order-details">
                    <% if (orders) { %>
                    <div class="order-card border rounded p-4 bg-light shadow">
                        <div class="order-header mb-4 bg-primary text-white p-3 rounded">
                            <h3><i class="fas fa-clipboard"></i> Order Details</h3>
                        </div>
        
                        <!-- Flex Container for Address and Order Details -->
                        <div class="order-info mb-4 d-flex justify-content-between flex-wrap">
                            <!-- Address Details -->
                            <div class="address-details bg-secondary text-white p-3 rounded shadow-sm" style="flex: 1; min-width: 250px; margin-right: 20px;">
                                <h4><i class="fas fa-map-marker-alt"></i> Address Details:</h4>
                                <% if (orders.deliveryAddress) { %>
                                <p><strong>Street:</strong> <%= orders.deliveryAddress.address %></p>
                                <p><strong>City:</strong> <%= orders.deliveryAddress.city %></p>
                                <p><strong>State:</strong> <%= orders.deliveryAddress.state %></p>
                                <p><strong>Postal Code:</strong> <%= orders.deliveryAddress.zipcode %></p>
                                <p><strong>Country:</strong> <%= orders.deliveryAddress.country %></p>
                                <% } else { %>
                                <p>Address not available.</p>
                                <% } %>
                            </div>
        
                            <!-- Order Details -->
                            <div class="order-summary bg-info text-white p-3 rounded shadow-sm" style="flex: 1; min-width: 250px;">
                              <p><strong>Order ID:</strong> <%= orders._id %></p>
                              <p><strong>Ordered Date:</strong> <%= orders.createdAt ? new Date(orders.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) : 'N/A' %></p>
                              
                            </div>
                        </div>
        
                        <hr class="my-4">
                        <div class="ordered-items">
                          <h4 class="bg-success text-white p-3 rounded shadow"><i class="fas fa-shopping-cart"></i> Ordered Items:</h4>
                          <div class="table-responsive">
                            <table class="table table-striped table-bordered">
                              <thead>
                                <tr>
                                  <th>Product ID</th>
                                  <th>Product Name</th>
                                  <th>Quantity</th>
                                  <th>Order Status</th>
                                  <th>Price</th>
                                  <th>Total Price</th>
                                  <th>Action</th>
                                </tr>
                              </thead>
                              <tbody>
                                <% if (orders.orderedItem && orders.orderedItem.length > 0) { %>
                                  <% orders.orderedItem.forEach(item => { %>
                                  <tr>
                                    <td><%= item.productId.name %></td>
                                    <td><img src="/productimage/<%= item.productId.image[0] %>" alt="<%= item.productId.name %>" style="max-width: 50px; max-height: 50px;" /></td>
                                    <td><%= item.quantity %></td>
                                    <td><%= item.orderStatus %></td>
                                    <td><%= item.totalProductAmount %></td>
                                    <td><%= orders.orderAmount %> %></td>
                                    <td>
                                      <% if (item.orderStatus === 'delivered') { %>
                                        <button class="btn btn-warning" onclick="showReturnForm('<%= item._id %>')">Return</button>
                                        <div id="returnForm-<%= item._id %>" class="return-form" style="display: none;">
                                          <div class="form-group">
                                            <label for="returnReason-<%= item._id %>">Reason for Return:</label>
                                            <select class="form-control" id="returnReason-<%= item._id %>">
                                              <option value="">Select a reason</option>
                                              <option value="defective">Defective</option>
                                              <option value="damaged">Damaged</option>
                                              <option value="not_as_described">Not as Described</option>
                                              <option value="other">Other</option>
                                            </select>
                                          </div>
                                          <button class="btn btn-primary mt-2" onclick="submitReturn('<%= item._id %>')">Submit Return</button>
                                        </div>
                                        <a href="/invoice?itemId=<%= item._id %>&orderId=<%= orders._id %>" class="btn btn-sm btn-primary" id="download-pdf" style="background-color: blue; width: 100px; height: 30px;">Invoice</a>

                                      <% } else if (item.orderStatus === 'returned') { %>
                                        <button class="btn btn-success" disabled>Returned</button>
                                      <% } else if (item.orderStatus === 'approved') { %>
                                        <button class="btn btn-secondary" disabled>Approved</button>
                                      <% } else if (item.orderStatus === 'rejected') { %>
                                        <button class="btn btn-danger" disabled>Rejected</button>
                                      <% } else if (item.orderStatus === 'cancelled') { %>
                                        <button class="btn btn-secondary" disabled>Cancelled</button>
                                      <% } else { %>
                                        <button class="btn btn-danger" onclick="showCancelForm('<%= item._id %>')">Cancel Order</button>
                                        <div id="cancelForm-<%= item._id %>" class="cancel-form" style="display: none;">
                                          <div class="form-group">
                                            <label for="cancelReason-<%= item._id %>">Reason for Cancellation:</label>
                                            <select class="form-control" id="cancelReason-<%= item._id %>">
                                              <option value="">Select a reason</option>
                                              <option value="changed_mind">Changed Mind</option>
                                              <option value="found_cheaper">Found Cheaper Elsewhere</option>
                                              <option value="shipping_delay">Shipping Delay</option>
                                              <option value="other">Other</option>
                                            </select>
                                          </div>
                                          <button class="btn btn-primary mt-2" onclick="submitCancel('<%= item._id %>')">Submit Cancellation</button>
                                        </div>
                                      <% } %>
                                    </td>
                                  </tr>
                                  <% }) %>
                                <% } %>
                              </tbody>
                            </table>
                          </div>
                        </div>
                        <% } else { %>
                        <p>No orders found.</p>
                        <% } %>
                        
                        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                        <script>
                        function showReturnForm(itemId) {
                            var returnForm = document.getElementById('returnForm-' + itemId);
                            if (returnForm) {
                                returnForm.style.display = 'block';
                            } else {
                                console.error('Return form not found for item ID:', itemId);
                            }
                        }
                        
                        async function submitReturn(itemId) {
                            const returnReasonSelect = document.getElementById(`returnReason-${itemId}`);
                            const returnReason = returnReasonSelect.value;
                        
                            if (!returnReason) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Warning',
                                    text: 'Please select a return reason',
                                });
                                return;
                            }
                        
                            try {
                                const response = await fetch('/returnOrder', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({ orderId: itemId, returnReason })
                                });
                        
                                if (response.ok) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Success',
                                        text: 'Return request submitted successfully',
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    throw new Error('Failed to submit return request');
                                }
                            } catch (error) {
                                console.error('Error processing return request:', error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Error processing return request: ' + error.message,
                                });
                            }
                        }
                        
                        function showCancelForm(itemId) {
                            var cancelForm = document.getElementById('cancelForm-' + itemId);
                            console.log(itemId);
                            if (cancelForm) {
                                cancelForm.style.display = 'block';
                            } else {
                                console.error('Cancel form not found for item ID:', itemId);
                            }
                        }
                        
                        async function submitCancel(itemId) {
                            const cancelReasonSelect = document.getElementById(`cancelReason-${itemId}`);
                            const cancelReason = cancelReasonSelect.value;
                        
                            if (!cancelReason) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Warning',
                                    text: 'Please select a cancellation reason',
                                });
                                return;
                            }
                        
                            try {
                                const response = await fetch('/cancelOrders', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({ itemId: itemId, cancelReason: cancelReason })
                                    
                                });
                        console.log(itemId, cancelReason);
                                if (response.ok) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Success',
                                        text: 'Cancellation request submitted successfully',
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    throw new Error('Failed to submit cancellation request');
                                }
                            } catch (error) {
                                console.error('Error processing cancellation request:', error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Error processing cancellation request: ' + error.message,
                                });
                            }
                        }
                        </script>
                        