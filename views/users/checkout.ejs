<%- include('../layouts/header.ejs') %>
<%- include('../layouts/navbar.ejs') %>
		<!-- End Header/Navigation -->
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<style>
	/* Custom CSS */
.form-check-input1 {
  transform: scale(1.5); /* Increase the size of the checkboxes */
  margin-right: 10px; /* Add some space between the checkbox and the label */
}

.form-check-label1 {
  font-size: 1.2rem; /* Increase the font size of the labels */
  font-weight: bold; /* Make the text bold */
}

</style>	
<style>
	.icon-cash {
		color: #28a745; /* Green */
	}
	.icon-razorpay {
		color: #007bff; /* Blue */
	}
	.icon-wallet {
		color: #ffc107; /* Yellow */
	}
	.form-check-label {
		display: flex;
		align-items: center;
	}
	.form-check-label i {
		margin-right: 10px;
	}
	.summary {
		text-align: right;
		margin-top: 20px;
	}
	.summary h5 {
		margin-bottom: 10px;
	}
</style>

		<!-- Start Hero Section -->
		<div class="hero" style="padding: 20px 0;">
			<div class="container">
				<div class="row justify-content-between align-items-center" style="height: 200px;"> <!-- Adjust height as needed -->
					<div class="col-lg-5">
						<div class="intro-excerpt">
							<h1>Checkout</h1>
						</div>
					</div>
					<div class="col-lg-7">
						<!-- Content for the right side of the hero section -->
					</div>
				</div>
			</div>
		</div>
		
		<!-- End Hero Section -->

		<div class="untree_co-section">
		    <div class="container">
		      <div class="row">
		        <div class="col-md-6 mb-5 mb-md-0">
		          <h2 class="h3 mb-3 text-black">Billing Details</h2>
		          <div class="p-3 p-lg-5 border bg-white">
					<% if(errmsg) { %>
						<div class="alert text-center " style="color: red;">
							<%= errmsg %>
						</div>
					<%  }  %>
		            <div class="form-group">
						<form id="formAddressDetails"   >
							<div class="card-header">
							  <h5 class="card-title mb-0"><h3>Address Details</h3></h5>
							  <div class="d-flex  flex-column">
								<br>
								<% address.forEach(addr => { %>
									<div class="form-check">
									  <input class="form-check-input" type="radio" name="selectedAddress" value="<%= addr._id %>" id="address_<%= addr._id %>">
									  <label class="form-check-label" for="address_<%= addr._id %>">
										
										<h5><%= addr.address %>, <%= addr.city %>, <%= addr.state %>, <%= addr.zipcode %></h5>  
									  </label>
									</div>
								  <% }); %>
								<!-- <button type="button" class="btn btn-plus btn-success" id="addNewAddressBtn">
									<i class="bi bi-plus fw-bold">+</i> 
								</button> -->
								<a href="/checkoutAddAddress" class="btn btn-success fw-bold ms-auto">+Add New Address</a>
							  </div>
							</div>
							<!-- Address Form -->
		            </div>

		          </div>
		        </div>
		        <div class="col-md-6">

					<div class="row mb-5">
						<div class="col-md-12">
						  <h2 class="h3 mb-3 text-black">Coupon Code</h2>
						  <div class="p-3 p-lg-5 border bg-white rounded shadow-sm">
							<div class="mb-3">
							  <label for="c_code" class="form-label">Enter your coupon code if you have one</label>
							  <div class="input-group">
								<input type="text" class="form-control" id="c_code" placeholder="Coupon Code" aria-label="Coupon Code">
								<button class="btn btn-outline-dark" type="button" id="applyCouponButton">Apply</button>
								<button class="btn btn-outline-dark" type="button" id="removeCouponButton" style="display: none;">Remove</button>
							  </div>
							</div>
						  </div>
						</div>
					  </div>
					  
					<h2 class="h3 mb-3 text-black">Available Coupons</h2>
<div id="couponsContainer" class="p-3 p-lg-5 border bg-white rounded shadow-sm">
  <!-- Coupons will be dynamically inserted here -->
</div>

		          <div class="row mb-5">
		            <div class="col-md-12">
		              <h2 class="h3 mb-3 text-black">Your Order</h2>
		              <div class="p-3 p-lg-5 border bg-white">
						<table class="table site-block-order-table mb-5">
							<thead>
								<tr>
									<th>Image</th>
									<th>Product</th>
									<th>Quantity</th>
									<th>Total</th>
								</tr>
							</thead>
							<tbody>
								<% cartItems.forEach(cart => { %>
									<tr>
										<td> <img src="/productimage/<%= cart.product[0].productId.image[0] %>" alt="Product Image" class="img-fluid" style="height: 70px; width: 65px;"></td>
										<td><%= cart.product[0].productId.name %> </td>
										<td><strong class="mx-2">x<%= cart.product[0].quantity %></strong> <%= cart.quantity %></td>
										<td>₹<%= (cart.product[0] && cart.product[0].totalPrice ? cart.product[0].totalPrice.toFixed(2) : '0.00') %></td>
									</tr>
								<% }); %>
								<tr>
									<td colspan="3" class="text-right text-black font-weight-bold"><strong>Cart Subtotal</strong></td>
									<td class="text-black">₹<%= cartItems.reduce((acc, item) => acc + (item.product[0].price * item.product[0].quantity), 0).toFixed(2) %></td>
								</tr>
								<tr>
									<td colspan="3" class="text-right text-black font-weight-bold"><strong>Discount</strong></td>
									<td class="text-black discount-amount">₹0.00</td>
								</tr>
								<tr>
									<td colspan="3" class="text-right text-black font-weight-bold"><strong>Delivery Charge</strong></td>
									<td class="text-black discount-amount">
										<del>₹40</del> ₹0.00
									</td>
								</tr>
								
								<tr>
									<td colspan="3" class="text-right text-black font-weight-bold"><strong>Order Total</strong></td>
									<td id="orderTotalValue" class="text-black order-total">₹<%= cartItems.reduce((acc, item) => acc + (item.product[0].price * item.product[0].quantity), 0).toFixed(2) %></td>
								</tr>
								
							</tbody>
						</table>
						
						<h2 class="text-center mb-4">Payment Methods</h2>
						<div class="form-check mb-3">
							<input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="cashOnDelivery">
							<label class="form-check-label" for="cashOnDelivery">
								<i class="fas fa-money-bill-wave icon-cash"></i> <strong>Cash On Delivery</strong>
							</label>
						</div>
						<div class="form-check mb-3">
							<input class="form-check-input" type="radio" name="paymentMethod" id="razorPay" value="razorPay">
							<label class="form-check-label" for="razorPay">
								<i class="fas fa-credit-card icon-razorpay"></i> <strong>Razor Pay</strong>
							</label>
						</div>
						<div class="form-check mb-3">
							<input class="form-check-input" type="radio" name="paymentMethod" id="Wallet" value="Wallet">
							<label class="form-check-label" for="Wallet">
								<i class="fas fa-wallet icon-wallet"></i> <strong>Wallet</strong>
							</label>


							
						</div>
					</div>
						  <br>
						  


		                <div class="form-group">
		                  <button class="btn btn-warning btn-lg py-3 btn-block"  id="placeOrderButton">Place Order</button>
		                </div>

		              </div>
		            </div>
		          </div>

		        </div>
		      </div>
		      <!-- </form> -->
		    </div>
		  </div>
		</form>
		<!-- Start Footer Section -->
		<footer class="footer-section">
			<div class="container relative">

				<div class="sofa-img">
					<img src="/assets/images/sofa.png" alt="Image" class="img-fluid">
				</div>

				<div class="row">
					<div class="col-lg-8">
						<div class="subscription-form">
							<h3 class="d-flex align-items-center"><span class="me-1"><img src="images/envelope-outline.svg" alt="Image" class="img-fluid"></span><span>Subscribe to Newsletter</span></h3>

							
								<div class="col-auto">
									<input type="text" class="form-control" placeholder="Enter your name">
								</div>
								<div class="col-auto">
									<input type="email" class="form-control" placeholder="Enter your email">
								</div>
								<div class="col-auto">
									<button class="btn btn-primary">
										<span class="fa fa-paper-plane"></span>
									</button>
								</div>
						

						</div>
					</div>
				</div>

				<div class="row g-5 mb-5">
					<div class="col-lg-4">
						<div class="mb-4 footer-logo-wrap"><a href="#" class="footer-logo">Furni<span>.</span></a></div>
						<p class="mb-4">Donec facilisis quam ut purus rutrum lobortis. Donec vitae odio quis nisl dapibus malesuada. Nullam ac aliquet velit. Aliquam vulputate velit imperdiet dolor tempor tristique. Pellentesque habitant</p>

						<ul class="list-unstyled custom-social">
							<li><a href="#"><span class="fa fa-brands fa-facebook-f"></span></a></li>
							<li><a href="#"><span class="fa fa-brands fa-twitter"></span></a></li>
							<li><a href="#"><span class="fa fa-brands fa-instagram"></span></a></li>
							<li><a href="#"><span class="fa fa-brands fa-linkedin"></span></a></li>
						</ul>
					</div>

					<div class="col-lg-8">
						<div class="row links-wrap">
							<div class="col-6 col-sm-6 col-md-3">
								<ul class="list-unstyled">
									<li><a href="#">About us</a></li>
									<li><a href="#">Services</a></li>
									<li><a href="#">Blog</a></li>
									<li><a href="#">Contact us</a></li>
								</ul>
							</div>

							<div class="col-6 col-sm-6 col-md-3">
								<ul class="list-unstyled">
									<li><a href="#">Support</a></li>
									<li><a href="#">Knowledge base</a></li>
									<li><a href="#">Live chat</a></li>
								</ul>
							</div>

							<div class="col-6 col-sm-6 col-md-3">
								<ul class="list-unstyled">
									<li><a href="#">Jobs</a></li>
									<li><a href="#">Our team</a></li>
									<li><a href="#">Leadership</a></li>
									<li><a href="#">Privacy Policy</a></li>
								</ul>
							</div>

							<div class="col-6 col-sm-6 col-md-3">
								<ul class="list-unstyled">
									<li><a href="#">Nordic Chair</a></li>
									<li><a href="#">Kruzo Aero</a></li>
									<li><a href="#">Ergonomic Chair</a></li>
								</ul>
							</div>
						</div>
					</div>

				</div>

				<div class="border-top copyright">
					<div class="row pt-4">
						<div class="col-lg-6">
							<p class="mb-2 text-center text-lg-start">Copyright &copy;<script>document.write(new Date().getFullYear());</script>. All Rights Reserved. &mdash; Designed with love by <a href="https://untree.co">Untree.co</a> Distributed By <a hreff="https://themewagon.com">ThemeWagon</a>  <!-- License information: https://untree.co/license/ -->
            </p>
						</div>

						<div class="col-lg-6 text-center text-lg-end">
							<ul class="list-unstyled d-inline-flex ms-auto">
								<li class="me-4"><a href="#">Terms &amp; Conditions</a></li>
								<li><a href="#">Privacy Policy</a></li>
							</ul>
						</div>

					</div>						
				</div>

			</div>
		</footer>
		<!-- End Footer Section -->	
		<%- include('../layouts/footer.ejs') %>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>
		<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script>
		document.addEventListener("DOMContentLoaded", async function () {
		  const placeOrderButton = document.getElementById("placeOrderButton");
		  const applyCouponButton = document.getElementById("applyCouponButton");
		  const removeCouponButton = document.getElementById("removeCouponButton");
		  const couponCodeInput = document.getElementById("c_code");
		  const orderTotalElement = document.getElementById("orderTotalValue");
		  await fetchAndDisplayCoupons();
		
		  let appliedCoupon = null;
		  let originalTotal = parseFloat(orderTotalElement.textContent.replace('₹', ''));
		  let currentTotal = originalTotal;
		
		  applyCouponButton.addEventListener("click", async function () {
			const couponCode = couponCodeInput.value;
			if (!couponCode) {
			  Swal.fire("Error", "Please enter a coupon code.", "error");
			  return;
			}
		
			try {
			  const response = await fetch('/apply-coupon', {
				method: 'POST',
				headers: {
				  'Content-Type': 'application/json',
				},
				body: JSON.stringify({ couponCode, originalTotal }),
			  });
		
			  if (!response.ok) {
				throw new Error('Failed to apply coupon');
			  }
		
			  const couponData = await response.json();
		
			  if (couponData.success) {
				appliedCoupon = couponCode;
				currentTotal = couponData.newTotal;
				updateOrderTotal(currentTotal);
				displayDiscountAmount(couponData.discountAmount);
				Swal.fire("Success", "Coupon applied successfully!", "success");
				removeCouponButton.style.display = "inline-block"; // Show the remove button
			  } else {
				Swal.fire("Error", couponData.message || 'Invalid coupon code.', "error");
			  }
			} catch (error) {
			  console.error('Error applying coupon:', error);
			  Swal.fire("Error", "Error applying coupon. Please try again.", "error");
			}
		  });
		
		  removeCouponButton.addEventListener("click", async function () {
			if (appliedCoupon) {
			  try {
				const response = await fetch('/remove-coupon', {
				  method: 'POST',
				  headers: {
					'Content-Type': 'application/json',
				  },
				  body: JSON.stringify({ originalTotal }),
				});
		
				if (!response.ok) {
				  throw new Error('Failed to remove coupon');
				}
		
				const couponData = await response.json();
		
				if (couponData.success) {
				  appliedCoupon = null;
				  couponCodeInput.value = '';
				  currentTotal = couponData.newTotal;
				  updateOrderTotal(currentTotal);
				  displayDiscountAmount(0); // Clear discount amount
				  Swal.fire("Success", "Coupon removed successfully!", "success");
				  removeCouponButton.style.display = "none"; // Hide the remove button
				} else {
				  Swal.fire("Error", couponData.message || 'Failed to remove coupon.', "error");
				}
			  } catch (error) {
				console.error('Error removing coupon:', error);
				Swal.fire("Error", "Error removing coupon. Please try again.", "error");
			  }
			} else {
			  Swal.fire("Error", "No coupon applied.", "error");
			}
		  });
		
		  placeOrderButton.addEventListener("click", async function (event) {
			event.preventDefault();
		
			try {
			  const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked').value;
			  const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
		
			  if (paymentMethod === 'cashOnDelivery' && currentTotal > 1000) {
				Swal.fire({
				  icon: 'error',
				  title: 'Order Total Exceeds Limit',
				  text: 'Cash on Delivery is not allowed for orders above ₹1000. Please select another payment method.'
				});
				return;
			  }
		
			  const response = await fetch('/checkoutAddress', {
				method: 'POST',
				headers: {
				  'Content-Type': 'application/json',
				},
				body: JSON.stringify({
				  selectedAddress,
				  paymentMethod,
				  couponCode: appliedCoupon,
				  finalTotal: currentTotal
				}),
			  });
		
			  if (!response.ok) {
				throw new Error('Failed to fetch response from server');
			  }
		
			  const orderData = await response.json();
		
			  if (paymentMethod === 'razorPay') {
				const options = {
				  key: 'rzp_test_xRxsOz9knBNBUy',
				  amount: currentTotal * 100,
				  currency: orderData.currency,
				  name: 'MODERN FURNITURE',
				  description: 'Purchase Description',
				  order_id: orderData.orderId,
				  handler: async function (response) {
					try {
					  const verifyResponse = await fetch('/verify-payment', {
						method: 'POST',
						headers: {
						  'Content-Type': 'application/json',
						},
						body: JSON.stringify({
						  razorpayPaymentId: response.razorpay_payment_id,
						  razorpayOrderId: response.razorpay_order_id,
						  razorpaySignature: response.razorpay_signature,
						  selectedAddress,
						  paymentMethod
						}),
					  });
		
					  if (!verifyResponse.ok) {
						throw new Error('Payment verification failed');
					  }
		
					  const verifyData = await verifyResponse.json();
					  if (verifyData.success) {
						window.location.href = '/thankyou';
					  } else {
						Swal.fire("Error", "Payment verification failed", "error");
					  }
					} catch (error) {
					  console.error('Error verifying payment:', error);
					  Swal.fire("Error", "Error verifying payment. Please try again.", "error");
					}
				  },
				  prefill: {
					name: 'ABHINAV.K',
					email: 'abhinavkkunnummal@gmail.com',
					contact: '9778519430'
				  },
				  theme: {
					color: '#3399cc'
				  },
				  modal: {
					ondismiss: async function() {
					  try {
						const failedResponse = await fetch('/handle-failed-razorpay', {
						  method: 'POST',
						  headers: {
							'Content-Type': 'application/json',
						  },
						  body: JSON.stringify({
							selectedAddress,
							paymentMethod
						  }),
						});
		
						if (!failedResponse.ok) {
						  throw new Error('Failed to handle failed payment');
						}
		
						const failedData = await failedResponse.json();
						if (failedData.success) {
						  Swal.fire({
							icon: 'warning',
							title: 'Payment Cancelled',
							text: 'Your order has been saved with a pending payment status. Please complete the payment later.',
							confirmButtonText: 'Ok'
						  }).then((result) => {
							if (result.isConfirmed) {
							  window.location.href = '/orders';
							}
						  });
						} else {
						  Swal.fire("Error", "Failed to save order. Please try again.", "error");
						}
					  } catch (error) {
						console.error('Error handling failed payment:', error);
						Swal.fire("Error", "Error handling failed payment. Please try again.", "error");
					  }
					}
				  }
				};
		
				const rzp1 = new Razorpay(options);
				rzp1.on('payment.failed', function (response) {
				  console.error('Payment failed:', response.error.code, response.error.description);
				  Swal.fire({
					icon: 'error',
					title: 'Payment Failed',
					text: 'Your payment was unsuccessful. The order has been saved with a pending payment status.',
					confirmButtonText: 'Ok'
				  }).then((result) => {
					if (result.isConfirmed) {
					  window.location.href = '/orders';
					}
				  });
				});
				rzp1.open();
			  } else {
				if (orderData.success) {
				  window.location.href = '/thankyou';
				} else {
				  Swal.fire("Error", "Error placing order. Please try again.", "error");
				}
			  }
		
			} catch (error) {
			  console.error('Error placing order:', error);
			  Swal.fire("Error", "Insufficient wallet Balance. Select Both Address and Payment Method ", "error");
			}
		  });
		
		  function updateOrderTotal(newTotal) {
			const orderTotalElement = document.querySelector('.order-total');
			orderTotalElement.textContent = `₹${newTotal.toFixed(2)}`;
		  }
		
		  function displayDiscountAmount(discountAmount) {
			const discountAmountElement = document.querySelector('.discount-amount');
			discountAmountElement.textContent = `₹${discountAmount.toFixed(2)}`;
		  }
		
		  async function fetchAndDisplayCoupons() {
			try {
			  const response = await fetch('/coupons');
			  if (!response.ok) {
				throw new Error('Failed to fetch coupons');
			  }
			  const data = await response.json();
		
			  if (data.success) {
				const couponsContainer = document.getElementById('couponsContainer');
				couponsContainer.innerHTML = ''; 
		
				const ul = document.createElement('ul');
				ul.className = 'list-group';
		
				data.coupons.forEach(coupon => {
				  const li = document.createElement('li');
				  li.className = 'list-group-item d-flex justify-content-between align-items-center';
				  li.innerHTML = `
					<span><strong>${coupon.couponCode}</strong> - ${coupon.description}</span>
					<button class="btn btn-outline-primary btn-sm copy-button" data-code="${coupon.couponCode}">Copy</button>
				  `;
				  ul.appendChild(li);
				});
		
				couponsContainer.appendChild(ul);
		
				
				attachCopyButtonListeners();
			  } else {
				throw new Error(data.message || 'Failed to fetch coupons');
			  }
			} catch (error) {
			  console.error('Error fetching coupons:', error);
			  Swal.fire("Error", "Failed to load available coupons.", "error");
			}
		  }
		
		  function attachCopyButtonListeners() {
			const copyButtons = document.querySelectorAll('.copy-button');
			copyButtons.forEach(button => {
			  button.addEventListener('click', function () {
				const couponCode = this.dataset.code;
				navigator.clipboard.writeText(couponCode).then(() => {
				  Swal.fire("Copied!", "Coupon code copied to clipboard.", "success");
				}).catch(err => {
				  Swal.fire("Error", "Failed to copy coupon code.", "error");
				});
			  });
			});
		  }
		});
		</script>
		