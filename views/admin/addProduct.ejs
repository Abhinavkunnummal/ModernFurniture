<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add Product</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
  <style>
    .preview-container {
      display: flex;
      flex-wrap: wrap;
    }
    .preview-image {
      width: 150px;
      height: 150px;
      margin-right: 10px;
      margin-bottom: 10px;
      object-fit: cover;
    }
    .cropper-container {
      position: relative;
      width: 100%;
      max-width: 600px;
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
  <%- include('/home/ubuntu/ModernFurniture/views/admin_Layouts/header.ejs') %>
  <%- include('/home/ubuntu/ModernFurniture/views/admin_Layouts/sidenav.ejs') %>
  <script defer src="https://cdn.crop.guide/loader/l.js?c=ZLZMMG"></script>
  <main class="main-wrap">
    <header class="main-header navbar">
      <!-- Header content -->
    </header>

    <section class="content-main">
      <form action="/admin/products" method="post" class="forms-sample" enctype="multipart/form-data">
        <% if (typeof message != 'undefined') { %>
          <p class="text-danger"><%= message %></p>
        <% } %>
        <h1 class="mb-4">Welcome to Add Product</h1>
        <div class="row">
          <div class="col-md-6">
            <a href="/admin/Productlist" class="btn btn-warning">Product Lists</a>
            <div class="form-group">
              <label for="name">Product Name</label>
              <input type="text" class="form-control border" name="name" id="name">
              <div id="name-error" class="error-message"></div>
            </div>
            <div class="form-group">
              <label for="description">Product Description</label>
              <textarea class="form-control border" name="description" id="description" rows="5"></textarea>
              <div id="description-error" class="error-message"></div>
            </div>
            <div class="form-group">
              <label for="productimages">Images (up to 4)</label>
              <input type="file" class="form-control border" id="productimages" name="images" accept="image/jpeg, image/png" multiple>
              <div id="images-error" class="error-message"></div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="form-group">
              <label for="price">Price</label>
              <input type="number" class="form-control border" name="price" id="price" min="1">
              <div id="price-error" class="error-message"></div>
            </div>
            <div class="form-group">
              <label for="category">Category</label>
              <select class="form-control border" name="category" id="category">
                <% categoryData.forEach(item => {  %>
                  <% if(!item.Is_Listed){ %>
                    <option value="<%= item._id %>"><%= item.name %> </option>
                  <% } %>
                <% }) %>
              </select>
              <div id="category-error" class="error-message"></div>
            </div>
            <div class="form-group">
              <label for="quantity">Stock</label>
              <input type="number" class="form-control border" name="stock" id="quantity" min="1">
              <div id="quantity-error" class="error-message"></div>
            </div>
          </div>
        </div>
        <button type="submit" class="btn btn-primary">Create Product</button>
      </form>
    </section>

    <div class="modal" id="cropperModal" tabindex="-1" role="dialog">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Crop Image</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div class="cropper-container">
              <img id="cropperImage" src="" alt="Image for cropping">
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const maxImageCount = 4;
        const previewContainer = document.getElementById("image-preview-container");
        const form = document.querySelector('.forms-sample');
        const cropperModal = document.getElementById('cropperModal');
        const cropperImage = document.getElementById('cropperImage');
        const cropButton = document.getElementById('cropButton');
        let cropper;
        let currentFile;
        let croppedImages = [];

        document.getElementById("productimages").addEventListener("change", function (e) {
          const selectedFiles = e.target.files;
          if (selectedFiles.length > maxImageCount) {
            showError('images', `Maximum ${maxImageCount} images allowed.`);
            e.target.value = "";
          } else {
            currentFile = selectedFiles[0];
            if (cropper) {
              cropper.destroy();
            }
            cropperImage.src = URL.createObjectURL(currentFile);
            cropperModal.style.display = 'block';
            cropper = new Cropper(cropperImage, {
              aspectRatio: 4 / 5,
              viewMode: 1,
              ready() {
                this.cropper.setCropBoxData({ left: 0, top: 0, width: 350, height: 450 });
              }
            });
          }
        });

        cropButton.addEventListener('click', () => {
          const canvas = cropper.getCroppedCanvas({
            width: 350,
            height: 450,
          });
          canvas.toBlob((blob) => {
            const previewImage = document.createElement("img");
            previewImage.className = "preview-image";
            previewImage.src = URL.createObjectURL(blob);
            previewContainer.appendChild(previewImage);

            croppedImages.push(blob);
            cropperModal.style.display = 'none';
          });
        });

        form.addEventListener('submit', (event) => {
          event.preventDefault();

          const name = document.getElementById('name');
          const description = document.getElementById('description');
          const price = document.getElementById('price');
          const category = document.getElementById('category');
          const quantity = document.getElementById('quantity');

          let isValid = true;

          showError('name', '');
          if (name.value.trim() === '') {
            showError('name', 'Please enter a product name.');
            isValid = false;
          }

          showError('description', '');
          if (description.value.trim() === '') {
            showError('description', 'Please enter a product description.');
            isValid = false;
          }

          showError('images', '');
          if (croppedImages.length === 0) {
            showError('images', 'Please select at least one image.');
            isValid = false;
          }

          showError('price', '');
          if (price.value.trim() === '' || parseFloat(price.value) <= 0) {
            showError('price', 'Please enter a valid price.');
            isValid = false;
          }

          showError('category', '');
          if (category.value.trim() === '') {
            showError('category', 'Please select a category.');
            isValid = false;
          }

          if (isValid) {
            const formData = new FormData(form);
            croppedImages.forEach((image, index) => {
              formData.append('croppedImages', image, `croppedImage_${index + 1}.png`);
            });
            fetch(form.action, {
              method: 'POST',
              body: formData
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                window.location.href = '/admin/productlist';
              } else {
                alert(data.message);
              }
            })
            .catch(error => {
              console.error('Error:', error);
            });
          }
        });

        function showError(fieldId, message) {
          const errorDiv = document.getElementById(`${fieldId}-error`);
          if (errorDiv) {
            errorDiv.textContent = message;
            errorDiv.style.display = message ? 'block' : 'none';
            errorDiv.style.color = 'red';
          }
        }
      });
    </script>
  </main>
  <%- include('/home/ubuntu/ModernFurniture/views/admin_Layouts/footer.ejs') %>
</body>
</html>
